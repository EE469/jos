1. What is the purpose of having an individual handler function for each exception/interrupt? (i.e., if all exceptions/interrupts were delivered to the same handler, what feature that exists in the current implementation could not be provided?)

Each handler function has a privilege level required for the software to invoke the exception / interrupt. Currently, The user only has the privilege to invoke the breakpoint and syscall exceptions.

2. Did you have to do anything to make the user/softint program behave correctly? The grade script expects it to produce a general protection fault (trap 13), but softint’s code says int $14. Why should this produce interrupt vector 13? What happens if the kernel actually allows softint’s int $14 instruction to invoke the kernel’s page fault handler (which is interrupt vector 14)?

The reason exception 13 is thrown is because the user does not have the right to invoke the Page Fault Exception. Therefore, the general protection fault is produced. If the user was allowed to invoke Page Faults they could control the memory management of the kernel.